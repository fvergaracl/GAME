"""new foreign keys in table oauthuser

Revision ID: cc88b5b558d7
Revises: ead50e21dd4f
Create Date: 2024-11-18 12:07:47.216047

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = 'cc88b5b558d7'
down_revision = 'ead50e21dd4f'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index('ix_userinteractions_id', table_name='userinteractions')
    op.drop_table('userinteractions')
    op.add_column('apikey', sa.Column('oauthusers_id', sa.String(), nullable=True))
    op.create_foreign_key(None, 'apikey', 'oauthusers', ['oauthusers_id'], ['provider_user_id'])
    op.add_column('games', sa.Column('oauthusers_id', sa.String(), nullable=True))
    op.create_foreign_key(None, 'games', 'oauthusers', ['oauthusers_id'], ['provider_user_id'])
    op.add_column('gamesparams', sa.Column('oauthusers_id', sa.String(), nullable=True))
    op.create_foreign_key(None, 'gamesparams', 'oauthusers', ['oauthusers_id'], ['provider_user_id'])
    op.add_column('logs', sa.Column('oauthusers_id', sa.String(), nullable=True))
    op.create_foreign_key(None, 'logs', 'apikey', ['apiKey_used'], ['apiKey'])
    op.create_foreign_key(None, 'logs', 'oauthusers', ['oauthusers_id'], ['provider_user_id'])
    op.add_column('tasks', sa.Column('oauthusers_id', sa.String(), nullable=True))
    op.create_foreign_key(None, 'tasks', 'oauthusers', ['oauthusers_id'], ['provider_user_id'])
    op.add_column('tasksparams', sa.Column('oauthusers_id', sa.String(), nullable=True))
    op.create_foreign_key(None, 'tasksparams', 'oauthusers', ['oauthusers_id'], ['provider_user_id'])
    op.add_column('useractions', sa.Column('oauthusers_id', sa.String(), nullable=True))
    op.create_foreign_key(None, 'useractions', 'oauthusers', ['oauthusers_id'], ['provider_user_id'])
    op.add_column('userpoints', sa.Column('oauthusers_id', sa.String(), nullable=True))
    op.create_foreign_key(None, 'userpoints', 'oauthusers', ['oauthusers_id'], ['provider_user_id'])
    op.add_column('users', sa.Column('oauthusers_id', sa.String(), nullable=True))
    op.create_foreign_key(None, 'users', 'oauthusers', ['oauthusers_id'], ['provider_user_id'])
    op.add_column('wallet', sa.Column('oauthusers_id', sa.String(), nullable=True))
    op.create_foreign_key(None, 'wallet', 'oauthusers', ['oauthusers_id'], ['provider_user_id'])
    op.add_column('wallettransactions', sa.Column('oauthusers_id', sa.String(), nullable=True))
    op.create_foreign_key(None, 'wallettransactions', 'oauthusers', ['oauthusers_id'], ['provider_user_id'])
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, 'wallettransactions', type_='foreignkey')
    op.drop_column('wallettransactions', 'oauthusers_id')
    op.drop_constraint(None, 'wallet', type_='foreignkey')
    op.drop_column('wallet', 'oauthusers_id')
    op.drop_constraint(None, 'users', type_='foreignkey')
    op.drop_column('users', 'oauthusers_id')
    op.drop_constraint(None, 'userpoints', type_='foreignkey')
    op.drop_column('userpoints', 'oauthusers_id')
    op.drop_constraint(None, 'useractions', type_='foreignkey')
    op.drop_column('useractions', 'oauthusers_id')
    op.drop_constraint(None, 'tasksparams', type_='foreignkey')
    op.drop_column('tasksparams', 'oauthusers_id')
    op.drop_constraint(None, 'tasks', type_='foreignkey')
    op.drop_column('tasks', 'oauthusers_id')
    op.drop_constraint(None, 'logs', type_='foreignkey')
    op.drop_constraint(None, 'logs', type_='foreignkey')
    op.drop_column('logs', 'oauthusers_id')
    op.drop_constraint(None, 'gamesparams', type_='foreignkey')
    op.drop_column('gamesparams', 'oauthusers_id')
    op.drop_constraint(None, 'games', type_='foreignkey')
    op.drop_column('games', 'oauthusers_id')
    op.drop_constraint(None, 'apikey', type_='foreignkey')
    op.drop_column('apikey', 'oauthusers_id')
    op.create_table('userinteractions',
    sa.Column('id', postgresql.UUID(), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.Column('apiKey_used', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('userId', postgresql.UUID(), autoincrement=False, nullable=True),
    sa.Column('taskId', postgresql.UUID(), autoincrement=False, nullable=True),
    sa.Column('interactionType', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('interactionDetail', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('oauth_user_id', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['taskId'], ['tasks.id'], name='userinteractions_taskId_fkey'),
    sa.ForeignKeyConstraint(['userId'], ['users.id'], name='userinteractions_userId_fkey'),
    sa.PrimaryKeyConstraint('id', name='userinteractions_pkey')
    )
    op.create_index('ix_userinteractions_id', 'userinteractions', ['id'], unique=False)
    # ### end Alembic commands ###
